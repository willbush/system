* System Configuration

Everything needed to build my NixOS system.

** NixOS
*** Build Custom ISO

I have a custom bootable ISO based on the graphical ISO provided by nixpkgs. The
custom ISO mostly just adds Emacs with my configuration along with a few other
tools that are nice to have.

To build it:

#+begin_src shell
cd system
nix build ".#iso"
#+end_src

The ISO will be in the ~./result/iso~ build result folder.

*** Install

Build and switch to the generation provided by the flake for machine / host
name:

#+begin_src shell
sudo nixos-rebuild switch --flake <PATH_TO_GIT_REPO>#<MACHINE>
#+end_src

For example:

#+begin_src shell
git clone https://github.com/willbush/system.git
cd system
sudo nixos-rebuild switch --flake '.#betelgeuse'
#+end_src

The ~.~ before the ~#~ is the path to the git repository. What comes after the
~#~ is the machine / host name which can be found enumerated in the ~flakes.nix~
file.

*** Update

To update all the flake inputs:

#+begin_src shell
nix flake update --recreate-lock-file
#+end_src

To up update a single input:

#+begin_src shell
nix flake update --update-input nixpkgs
#+end_src

*** Nix Repl

To open the flake in a ~nix repl~ do the following:

#+begin_src shell
nix run '.#repl'
#+end_src

*** Flakes Learning Resources

- https://nixos.wiki/wiki/Flakes
- https://www.tweag.io/blog/2020-05-25-flakes/
- https://www.tweag.io/blog/2020-06-25-eval-cache/
- https://www.tweag.io/blog/2020-07-31-nixos-flakes/
- https://github.com/colemickens/nixos-flake-example

** Folder Structure

The following is 1 level deep directory structure generated using ~tree -L 1 -d~.

#+begin_src
.
├── config
├── config-backups
├── emacs
├── keyboard-firmware
├── machines
└── xmonad
#+end_src

*** config

Config files used in NixOS that are symlinked to ~/.config/~ and managed with
[[https://github.com/rycee/home-manager][home manager]].

*** config-backups

Miscellaneous configuration files that I'm backing up and are not deployed
automatically.

*** emacs

My emacs configuration code. See its [[file:emacs/readme.org][readme]] for more information.

*** keyboard-firmware

Holds my keyboard firmware code managed by Nix and the [[file:keyboard-firmware/readme.org][readme]] that goes into
depth on my key layout and customized Evil / Vim keybindings.

*** machines

Machine / host specific configuration files.

*** xmonad

My Xmonad configuration code which is symlinked by home-manager. See its [[file:xmonad/readme.org][readme]]
for more information.
