#! /usr/bin/env nix-shell
#! nix-shell -i bash -p python3
#
# For what the above magic does see: https://nixos.org/nix/manual/#use-as-a-interpreter
#
# Generates a nix expression list of PIA VPN servers.
#
# Inspired by the pia-server-list-generator.sh [1] script.
# Which was inspired by the pia-nm.sh [2] script.
#
# [1] https://github.com/bjornfor/nixos-config/blob/b63b8abdc94270b48b1806aeadf5075667131d05/options/pia/pia-server-list-generator.sh
# [2] https://www.privateinternetaccess.com/installer/pia-nm.sh

error() {
  echo "$@" >&2
  exit 1
}

thisfile=$(readlink -f -- "$0")
thisdir=$(dirname "$thisfile")
outputfile="$thisdir/pia-generated-server-list.nix"
servers=$(curl -Ss "https://www.privateinternetaccess.com/vpninfo/servers?version=24" | head -1)

if [ -z "$servers" ]; then
  error "Failed to download server list, aborting."
fi

servers=$(python3 <<EOF
import sys
import json

data = json.loads('$servers')

for k in data.keys():
  if k != "info":
    print(data[k]["dns"] + ':' + data[k]["name"])
EOF
)

printf "# Generated by $thisfile\n\n" > "$outputfile"
printf "[\n" >> "$outputfile"
echo "$servers" | while read server; do
  name="PIA - "$(echo "$server" | cut -d: -f2)
  host=$(echo "$server" | cut -d: -f1)

  cat <<EOF >> "$outputfile"
  { id = "$name";
    uuid = "$(uuidgen)";
    remote = "$host";
  }
EOF
done
printf "]\n" >> "$outputfile"

echo "Generated $(echo "$servers" | wc -l) server entries in $outputfile"
