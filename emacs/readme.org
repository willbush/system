* Linux Emacs Setup

  I deploy Emacs using [[https://github.com/rycee/home-manager][home-manager]] in NixOS. Look in the NixOS folder to see
  how that's done exactly.

* Windows Emacs Setup
** Intro

   The following is my own notes and commentary on Windows integration and is
   meant as supplementary to [[https://www.emacswiki.org/emacs/EmacsMsWindowsIntegration][EmacsMsWindowsIntegration]].

   Unfortunately, Windows does not have first class support in Emacs. However,
   Emacs is very much a "build your own editor" experience already so most Emacs
   users are up to some of the manual steps involved.

   There are several approaches to installing Emacs on Windows:

   - using [[https://www.msys2.org/][msys2]]
   - using GNU provided Windows build
   - using [[https://www.cygwin.com/][cygwin]]
   - using a Linux VM
   - using WSL and Windows X server port

   I personally think WSL2 is the best option due to many performance issues
   with native Windows builds. However, it's also the hardest to setup. I'm not
   even yet fully migrated over to that method yet for a variety of reasons.

   I was using MSYS2 to install Emacs in Windows, but since it takes a long time
   for them to update to recent versions of Emacs, I'm using a GNU provided
   Windows build. However, I do use MSYS2 or https://chocolatey.org/ to install
   other tools I use.

** Installing Emacs using MSYS2

   Install Emacs via msys2 as the [[https://www.gnu.org/software/emacs/download.html#windows][gnu.org emacs windows download]] page says.

*** Install MSYS2

    1. Set up ~HOME~ environmental variable

       By default, msys2 uses =c:/msys64/home= as the home directory. If you
       want to instead it to use your =%USERPROFILE%=, then add a user
       environmental variable of =HOME= set to =%USERPROFILE%=.

       I recommend doing this step first before installing as I had to logout
       and log back in for Emacs to work correctly when setting the
       environmental variable after the steps below.

   2. Install [[https://www.msys2.org/][msys2]]
   3. Run `pacman -Syu`
   4. Close the shell when it tells you to.
   5. Run `pacman -Sy` to upgrade everything

*** Use MSYS2 to Install Emacs

   1. Open MSYS2 MinGW 64 bit terminal and run:

      #+BEGIN_SRC shell
      pacman -S mingw-w64-x86_64-emacs
      #+END_SRC

   2. Emacs should now be located =C:\msys64\mingw64\bin\=

   3. Install Hack font: https://sourcefoundry.org/hack/

   4. Clone this repository and make a symbolic link to the =.emacs= file or run
      the script that does it for you.

      Using a command prompt opened as Administrator (paths might differ):

      #+BEGIN_SRC shell
      mklink C:\Users\Will\.emacs.d C:\Users\Will\system\emacs
      #+END_SRC

   5. Run =runemacs.exe= and it should automatically download and install all
      packages.

   6. When Emacs is done installing packages =M-x all-the-icons-install-fonts=.
      When prompted for a directory just put them in the Downloads directory,
      and then manually right click on each one and select ~Install~.

** Setup Emacs to run in daemon mode on startup.

   See also: [[https://www.emacswiki.org/emacs/EmacsMsWindowsIntegration#toc7][Run Emacs server section of wiki]] and [[Wiki Remarks]] section below.

   1. Open File Explorer, type ~shell:startup~ in the address bar, and press
      enter.

   2. Create a bat script file, perhaps named ~StartEmacsServer.bat~, with the
      following content:

    #+BEGIN_SRC bat
      rem cd into home so emacs client will start in the home folder,
      rem which is nice when using find-file
      cd %HOME%
      del /Q .emacs.d\server\*
      "C:\msys64\mingw64\bin\runemacs.exe" --daemon
    #+END_SRC

    The bat script above does two things:

      - Deletes all old server info from the ~%HOME%\.emacs.d\server\~ folder
        with the quite flag to prevent prompting for delete confirmation.

      - Runs ~runemacs.exe~ with the --daemon flag to run as a daemon in the
        background.

   3. Edit the path to ~runemacs.exe~ if needed. Note if the path contains
      spaces, it needs to be quoted.

*** Troubleshooting Tips

    - Use [[https://docs.microsoft.com/en-us/sysinternals/downloads/process-explorer][process explorer]] to check to see if the emacs daemon is running. Press
      ~C-F~ and search for ~emacs~. If emacs daemon is running, you should see a
      Process ~emacs.exe~ with Type ~DLL~ and Name whose value is the path to
      your ~emacs.exe~.

    - If you quit emacs, this will also tell the daemon to quit. Consider
      instead calling the ~delete-frame~ function instead.

*** Wiki Remarks

    The emacs wiki [[https://www.emacswiki.org/emacs/EmacsMsWindowsIntegration][page]] on Windows integration and a section to setup emacs as a
    server that automatically runs at start. It gives a power shell script that
    I have had the following issues with:

    1. Something about the bat file or first character it writes is messed up
       because when I attempt to run it I get an error: ~'â– d' is not recognized
       as an internal or external command~

    2. It inserts ~del /Q %HOME%/.emacs.d/server/*~ with forward slashes in the
       path, which doesn't work for me unless I change them to backslashes.

    3. It assumes the path you replace to ~runemacs.exe~ will not have spaces.

** Create a shortcut

   Also see: [[https://www.emacswiki.org/emacs/EmacsMsWindowsIntegration#toc2][Create a shortcut section on wiki]]

   1. Right click in the folder (or Desktop) where you want the shortcut and
      create a new shortcut, and enter the following as the location:

      If you want Emacs to connect to the daemon or if it's not running, start
      the daemon and then connect:

      #+BEGIN_SRC
      C:\msys64\mingw64\bin\emacsclientw.exe -c -n -a ""
      #+END_SRC

      If you want Emacs to connect to the daemon or if it's not running, start
      independent Emacs process:

      #+BEGIN_SRC
      C:\msys64\mingw64\bin\emacsclientw.exe -c -n -a C:\msys64\mingw64\bin\runemacs.exe
      #+END_SRC

      #+BEGIN_QUOTE
      -c tells emacs to create a new frame instead of trying to use an existing
         frame.

      -n means no wait - don't wait for the server to return

      -a EDITOR specifies to the emacsclientw.exe which editor to run if
         emacs.exe is not running. An empty string starts a new server if needed
      #+END_QUOTE

   2. Right click on the short cut and select properties. Change the "Start in"
      to something sensible like your home folder "C:\User\username"

   3. Pin it to Start if desired. I noticed if pined to the task bar it will
      create a duplicate icon on the task bar when launched so I typically avoid
      this.

** Global context menu

   Also see: [[https://www.emacswiki.org/emacs/MsWindowsGlobalContextMenu][Global context menu section of wiki]]

   I have included the registry file
   [[../config-backups/win/config/emacs-global-context.reg]] with appropriate paths
   in the same folder as this document. I have the alternate editor set to an
   empty string so that it will create a new Emacs daemon, if it's not running,
   and connect the client to it.

   This will allow right clicking on a file or directory and opening it in
   Emacs. However, again it will not open in an existing instance of Emacs
   unless you're running the daemon server.

** Spell checking

*** Aspell

    1. Install using MSYS2:

       #+BEGIN_SRC shell
       pacman -S mingw64/mingw-w64-x86_64-aspell
       pacman -S mingw64/mingw-w64-x86_64-aspell-en
       #+END_SRC

    2. make sure MSYS64 bin path (e.g. =C:\msys64\mingw64\bin=) is in your
       ~Path~ environmental variable.

    3. set =(setq ispell-program-name "aspell")= in your emacs config and
       restart emacs. Restarting is likely necessary in order to pick up new
       environmental variables.

** Tips and Tricks

*** Open file explorer or other program from dired

    We can launch any program on a file by positioning the point on the file and
    execute a shell command with =!= and enter the name of the program. For
    example, to open file explorer to the current dired folder put the point on
    =.= and execute a shell command with =!= and enter =explorer=.
